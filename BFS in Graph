#include<bits/stdc++.h>
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<int> adj[vertex];
    for(int i=0;i<edges.size();i++)
    {
        adj[edges[i].first].push_back(edges[i].second);
        adj[edges[i].second].push_back(edges[i].first);
    }
    vector<int> ans;
    bool visited[vertex+1]={false};
    queue<int> q;
    for(int i=0;i<vertex;i++)
    {
        if(!visited[i])
        {
            sort(adj[i].begin(),adj[i].end());
            q.push(i);
            visited[i]=true;
            while(!q.empty())
            {
                int u=q.front();
                ans.push_back(u);
                q.pop();
                for(int v:adj[u])
                {
                    if(!visited[v])
                    {
                        visited[v]=true;
                        q.push(v);
                    }
                }
            }
        }
    }
    return ans;
}
