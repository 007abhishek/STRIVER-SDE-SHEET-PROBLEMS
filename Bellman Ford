#include<bits/stdc++.h>


int bellmonFord(int n, int m, int src, int dest, vector<vector<int>> &edges) {
    
 
     vector<int>distTo(n+1,1e9);
     distTo[src] = 0 ; 
     for(int times = 1 ; times<=n-1 ; times++){
        for(auto e : edges) {
            int u = e[0];
            int v = e[1];
            int w = e[2];
            if(distTo[u] !=1e9 and (distTo[v] > (w + distTo[u]))){
                distTo[v] = w + distTo[u];
            }
        }
     }
//     one relaxation to find negative
    bool negative  = false;
      for(auto e : edges) {
            int u = e[0];
            int v = e[1];
            int w = e[2];
            if(distTo[u] !=1e9 and (distTo[v] > (w + distTo[u]))){
                negative = false;
               break;
            }
        }
    
    if(negative){
        return 1e9;
    }
    
    return distTo[dest];
}
