/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> ans;
    if(root==NULL)
        return ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    int isEven=0;
    while(!q.empty())
    {
        int n=q.size();
        vector<int> temp;
        for(int i=0;i<n;i++)
        {
            BinaryTreeNode<int> *curr=q.front();
            q.pop();
            if(isEven%2==0)
                ans.push_back(curr->data);
            else
                temp.push_back(curr->data);
            if(curr->left)
                q.push(curr->left);
            if(curr->right)
                q.push(curr->right);
        }
        int i=temp.size()-1;
        for(;i>=0;i--)
            ans.push_back(temp[i]);
        isEven++;
    }   
    return ans;
}
