/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
vector<int> bottomView(BinaryTreeNode<int> * root){
    vector<int> ans;
    map<int,int> m;
    
    queue<pair<int,BinaryTreeNode<int>*> >q;
    q.push({0,root});
    
    while(!q.empty())
    {
        int n=q.size();
        for(int i=0;i<n;i++)
        {
            pair<int,BinaryTreeNode<int>*> p=q.front();
            m[p.first]=p.second->data;
            
            if(p.second->left)
                q.push({p.first-1,p.second->left});
            if(p.second->right)
                q.push({p.first+1,p.second->right});
            
            q.pop();
        }
    }
    for(auto x:m)
        ans.push_back(x.second);

    return ans;
}
