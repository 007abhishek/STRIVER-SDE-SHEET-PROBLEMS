bool check(int i,vector<int> adj[],vector<int> &color)
{
    for(int x:adj[i])
    {
        if(color[x]==-1)
        {
            color[x]=(color[i]==0)?1:0;
            if(check(x,adj,color))
                return true;
        }
        else if(color[x]==color[i])
            return true;
    }
    return false;
}

bool isGraphBirpatite(vector<vector<int>> &edges) {
	int n=edges.size();
    vector<int> adj[n];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(edges[i][j])
            {
                adj[i].push_back(j);
                adj[j].push_back(i);
            }
        }
    }
    vector<int> color(n,-1);
    for(int i=0;i<n;i++)
    {
        if(color[i]==-1)
        {
            color[i]=1;
            if(check(i,adj,color))
                return false;
        }
    }
    return true;
}
