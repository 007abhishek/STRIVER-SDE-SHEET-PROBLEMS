bool isCycle(int i,vector<bool> &visited,vector<int> adj[],int parent)
{
    visited[i]=true;
    for(int x:adj[i])
    {
        if(!visited[x])
        {
            if(isCycle(x,visited,adj,i))
                return true;
        }
        else if(x!=parent)
            return true;
    }
    return false;
}

string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> adj[n+1];
    for(int i=0;i<m;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<bool> visited(n+1,false);
    
    for(int i=1;i<n;i++)
    {
        if(!visited[i])
        {
            if(isCycle(i,visited,adj,-1))
                return "Yes";
        }
    }
    return "No";
}
