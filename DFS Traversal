void DFS(int i, vector<int> adj[],vector<bool> &visited,vector<int> &temp)
{
    visited[i]=false;
    temp.push_back(i);
    for(int x:adj[i])
    {
        if(visited[x])
            DFS(x,adj,visited,temp);
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<int> adj[V];
    for(int i=0;i<E;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<vector<int> > ans;
    vector<bool> visited(V,true);
    for(int i=0;i<V;i++)
    {
        if(visited[i]){
            vector<int> temp;
            DFS(i,adj,visited,temp);
            ans.push_back(temp);
        }
            
    }
    return ans;
}
