double median(vector<int> a, vector<int> b)
{
    int m=a.size(),n=b.size();
    if(m>n)
        return median(b,a);//ensuring that binary search happens on minimum size array
    int low=0,high=m,mpos=(m+n+1)/2;
    while(low<=high)
    {
        int cut1=(low+high)/2;
        int cut2=mpos-cut1;
        int l1=(cut1==0)?-1e9:a[cut1-1];
        int l2=(cut2==0)?-1e9:b[cut2-1];
        int r1=(cut1==m)?1e09:a[cut1];
        int r2=(cut2==n)?1e09:b[cut2];
        if(l1<=r2 && l2<=r1)
        {
            if((m+n)%2==0)
                return (max(l1,l2)+min(r1,r2))/2.0;
            else
                return max(l1,l2);
        }
        if(l2>r1)
            low=cut1+1;
        else
            high=cut1-1;
            
    }
    return 0.0;
}
