// double power(double num,int n)
// {
//     double ans=1.0;
//     for(int i=1;i<=n;i++)
//         ans*=num;
//     return ans;
// }
// double findNthRootOfM(int n, long long m) {
//     long double low=1,high=m,esp=1e-8;
//     int t=0;
//     while((high-low)>esp)
//     {
//         double mid=(low+high)/2.00000000;
//         if(power(mid,n) < m)
//             low=mid;
//         else
//             high=mid;
//     }
//     return low;
// }
double findNthRootOfM(int n, long long m) {
    // Write your code here.
    double t=1.000000/n;
    double ans=pow(m,t);
    return ans;
}
