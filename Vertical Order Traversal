/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
#include<bits/stdc++.h>
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    vector<int>ans;
    map<int,vector<int>>m;
    
    queue<pair<int,TreeNode<int>*> >q;
    q.push({0,root});
    
    while(!q.empty())
    {
        int n=q.size();
        for(int i=0;i<n;i++)
        {
            pair<int,TreeNode<int>*> p=q.front();
            m[p.first].push_back(p.second->data);
            
            if(p.second->left)
                q.push({p.first-1,p.second->left});
            if(p.second->right)
                q.push({p.first+1,p.second->right});
            
            q.pop();
        }
    }
    for(auto v:m)
    {
        for(int t:v.second)
            ans.push_back(t);
    }
    return ans;
}
